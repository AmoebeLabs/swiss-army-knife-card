#
# File      : sak_templates.yaml
# Project   : Home Assistant
# Repository: https://github.com/AmoebeLabs/Home-Assistant-Config
#
# Author: Mars @ AmoebeLabs.com
# 
# License: CC BY-SA, https://creativecommons.org/licenses/by/4.0/
#
# -----
# Description:
#   Swiss Army Knife template yaml file
#   
#
# All the SAK defined CSS stuff, containing:
# - Toolset and Tools definitions
# - CSS Animations
# - CSS Filters
#
###############################################################################

#
# SVG Definitions
#
#==============================================================================
# sak_svg_definitions:
  # !include sak-svg-definitions.yaml
# user_svg_definitions:
  # - descr: nm-1-reverse
    # content: |
      # <filter id="nm-1-reverse" x="-50%" y="-50%" width="300%" height="300%">
        # <feDropShadow stdDeviation="4.5" in="SourceGraphic" dx="-6" dy="-6" flood-color="var(--cs-theme-shadow-darker)" flood-opacity="0.5" result="dropShadow"/>
        # <feDropShadow stdDeviation="5" in="SourceGraphic" dx="6" dy="6" flood-color="var(--cs-theme-shadow-lighter)" flood-opacity="1" result="dropShadow1"/>
        # <feMerge result="merge">
          # <feMergeNode in="dropShadow1"/>
          # <feMergeNode in="dropShadow"/>
        # </feMerge>
      # </filter>

  # - descr: user-nm-1-reverse
    # content: |
      # <filter id="user-nm-1-reverse" x="-50%" y="-50%" width="300%" height="300%">
        # <feDropShadow stdDeviation="4.5" in="SourceGraphic" dx="-6" dy="-6" flood-color="var(--cs-theme-shadow-darker)" flood-opacity="0.5" result="dropShadow"/>
        # <feDropShadow stdDeviation="5" in="SourceGraphic" dx="6" dy="6" flood-color="var(--cs-theme-shadow-lighter)" flood-opacity="1" result="dropShadow1"/>
        # <feMerge result="merge">
          # <feMergeNode in="dropShadow1"/>
          # <feMergeNode in="dropShadow"/>
        # </feMerge>
      # </filter>


#
# CSS Definitions
#
# Next file contains the SAK CSS definitions for all the tools. Do NOT change this file!
# If you want to change the CSS definitions, please do that in the user_css_definitions.yaml file.
#
# The ability to overwrite/redefine existing classes and make your own classes
# opens up a lot of possibilities & re-use. 
# If you re-use an existing design/layout but want other colors that are defined
# using classes, you simply redefine the classes to your own needs and you can
# have your own look&feel.
#
# NOTE:
# CSS classes are still experimental and introduced recently. So most of the
# examples use direct (inline) styling, and not classes.
#
# CSS definitions are covering:
# - CSS class styling for tools
# - CSS animations
# - CSS Filters
#
#==============================================================================
sak_css_definitions:
  !include sak-css-definitions.yaml
user_css_definitions:
  !include user-css-definitions.yaml

#
# SVG Definitions
#
# Testing / Future extension possibly. Color palettes.
#
#==============================================================================
color_palette_default:
  template:
    type: colorswatches
  colorswatches:
    colors:
      light:
        - --sak-cs-default-text: 'var(--primary-text-color)'
        - --sak-cs-default-background: 'var(--primary-background-color)'
        - --sak-cs-default-01: 'red'
        - --sak-cs-default-02: 'green'
        - --sak-cs-default-03: 'blue'
      dark:
        - --sak-cs-default-text: 'var(--primary-text-color)'
        - --sak-cs-default-background: 'var(--primary-background-color)'
        - --sak-cs-default-01: 'red'
        - --sak-cs-default-02: 'green'
        - --sak-cs-default-03: 'blue'

# From Pinterest
# - gainsboro: kind of white / background
# - slategray: kind of green/gray
# - darkslategray: almost black for font

color_palette_android_watch:
  template:
    type: colorswatch
  colorswatch:
    colorswatch: color_palette_android_watch
    colors:
      light:
      - --sak-cs-aw-gainsboro: '#e7e7e7'
      - --sak-cs-aw-slategray: '#5c7886'
      - --sak-cs-aw-lightgray: '#e7e7e7'
      - --sak-cs-aw-darkorange: '#f79201'
      - --sak-cs-aw-darkslategray: '#2e2e2e'

color_palette_default_gradient_white_orange:
  template:
    type: colorswatch
  colorswatch:
    colorswatch: color_palette_default_gradient_white_orange
    colors:
      light:
      - --sak-cs-default-01: '#FFF6E3'
      - --sak-cs-default-02: '#FFE9B9'
      - --sak-cs-default-03: '#FFDA8A'
      - --sak-cs-default-04: '#FFCB5B'
      - --sak-cs-default-05: '#FFBF37'
      - --sak-cs-default-06: '#ffb414
      - --sak-cs-default-07: '#FFAD12'
      - --sak-cs-default-08: '#FFA40E'
      - --sak-cs-default-09: '#FF9C0B'
      - --sak-cs-default-10: '#FF8C06'
    

color_palette_gradient_white_orange:
  template:
    type: colorswatch
  colorswatch:
    colorswatch: color_palette_gradient_white_orange
    colors:
      - --sak-cs-gradient-white-orange-01: '#FFF6E3'
      - --sak-cs-gradient-white-orange-02: '#FFE9B9'
      - --sak-cs-gradient-white-orange-03: '#FFDA8A'
      - --sak-cs-gradient-white-orange-04: '#FFCB5B'
      - --sak-cs-gradient-white-orange-05: '#FFBF37'
      - --sak-cs-gradient-white-orange-06: '#ffb414
      - --sak-cs-gradient-white-orange-07: '#FFAD12'
      - --sak-cs-gradient-white-orange-08: '#FFA40E'
      - --sak-cs-gradient-white-orange-09: '#FF9C0B'
      - --sak-cs-gradient-white-orange-10: '#FF8C06'

color_palette_rainbow:
  template:
    type: colorswatch
  colorswatch:
    colorswatch: color_palette_rainbow
    colors:
      - --sak-cs-rainbow-00: 'white'
      - --sak-cs-rainbow-01: '#5e4fa2'
      - --sak-cs-rainbow-02: '#3288bd'
      - --sak-cs-rainbow-03: '#66c2a5'
      - --sak-cs-rainbow-04: '#abdda4'
      - --sak-cs-rainbow-05: '#e6f598'
      - --sak-cs-rainbow-06: '#fee08b'
      - --sak-cs-rainbow-07: '#fdae61'
      - --sak-cs-rainbow-08: '#f46d43'
      - --sak-cs-rainbow-09: '#d53e4f'
      - --sak-cs-rainbow-10: '#9e0142'
    
#
# Colorstop templates
#
# Include colorstop templates.
# These templates show that you can template almost everything in SAK.
# Colorstops can be used by several cards, so define at one place (this place) and
# re-use in all your cards for consistency and ease of use.
#
# The toolset_arc180_sparklinebar24 tools template shows how to use a colorstop template
# In this case, the colorstop template is a variable, which can be passed to the template...
#
# So you can use a template in a template ;-)
#
#==============================================================================
colorstops_lux:
  template:
    type: colorstops
    defaults:
      - thegap: 1
  colorstops:
    gap: '[[thegap]]'
    colors:
      0: 'grey'
      50: 'var(--theme-gradient-color-01)'
      75: 'var(--theme-gradient-color-02)'
      100: 'var(--theme-gradient-color-03)'
      125: 'var(--theme-gradient-color-04)'
      150: 'var(--theme-gradient-color-05)'
      175: 'var(--theme-gradient-color-06)'

colorstops_pressure:
  template:
    type: colorstops
    defaults:
      - thegap: 1
  colorstops:
    gap: '[[thegap]]'
    colors:
      980: 'lightgrey'
      990: 'var(--theme-gradient-color-01)'
      1020: 'var(--theme-gradient-color-05)'

colorstops_temperature_inside:
  template:
    type: colorstops
    defaults:
      - thegap: 1
  colorstops:
    gap: '[[thegap]]'
    colors:
      17: 'PowderBlue'
      19: 'var(--theme-gradient-color-01)'
      21: 'var(--theme-gradient-color-04)'

colorstops_humidity:
  template:
    type: colorstops
    defaults:
      - thegap: 1
  colorstops:
    gap: '[[thegap]]'
    colors:
      00: 'var(--theme-gradient-color-02)'
      35: 'DarkSeaGreen'
      65: 'PowderBlue'
#
# Toolset Definitions
#
# Toolset template definitions as the last part of the template file definitions
#
#==============================================================================
tools_segarc_icon_state:
  !include toolset-segarc-icon-state-template.yaml

toolset_arc180_sparklinebar24:
  !include toolset-arc180-sparklinebar24-template.yaml

toolset_light_button:
  !include toolset-light-button-template.yaml

toolset_light_button_nm:
  !include toolset-light-button-nm-template.yaml

toolset_light_button_slider_nm:
  !include toolset-light-button-slider-nm-template.yaml

toolset_light_button_slider2_nm:
  !include toolset-light-button-slider2-nm-template.yaml

toolset_light_button_slider3_nm:
  !include toolset-light-button-slider3-nm-template.yaml

toolset_sensor_history:
  !include toolset-sensor-history-template.yaml
