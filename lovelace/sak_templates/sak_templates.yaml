#
# File      : sak_templates.yaml
# Project   : Home Assistant
# Repository: https://github.com/AmoebeLabs/Home-Assistant-Config
#
# Author: Mars @ AmoebeLabs.com
# 
# License: CC BY-SA, https://creativecommons.org/licenses/by/4.0/
#
# -----
# Description:
#   Swiss Army Knife template yaml file
#   
###############################################################################

# Card or toolset can load a list of colors, using css variables '--' colors
# The toolset can use these colors, using var('')
#
# Toolset can also redefine the colorlist, and overwrite the variables

# sak-card-cs list...
# sak-toolset-cs list...

# The default colorswatch is ALWAYS loaded for the card!
# NOTE:
# - colorswatch or color palette? Latter seems the best one. Swatch is more colors/combintions??
colorswatch_default:
  template:
    type: colorswatches
  colorswatches:
    colors:
      light:
        - --sak-cs-default-text: 'var(--primary-text-color)'
        - --sak-cs-default-background: 'var(--primary-background-color)'
        - --sak-cs-default-01: 'red'
        - --sak-cs-default-02: 'green'
        - --sak-cs-default-03: 'blue'
      dark:
        - --sak-cs-default-text: 'var(--primary-text-color)'
        - --sak-cs-default-background: 'var(--primary-background-color)'
        - --sak-cs-default-01: 'red'
        - --sak-cs-default-02: 'green'
        - --sak-cs-default-03: 'blue'

# From Pinterest
# - gainsboro: kind of white / background
# - slategray: kind of green/gray
# - darkslategray: almost black for font

colorswatch_android_watch:
  template:
    type: colorswatch
  colorswatch:
    colorswatch: colorswatch_android_watch
    colors:
      light:
      - --sak-cs-aw-gainsboro: '#e7e7e7'
      - --sak-cs-aw-slategray: '#5c7886'
      - --sak-cs-aw-lightgray: '#e7e7e7'
      - --sak-cs-aw-darkorange: '#f79201'
      - --sak-cs-aw-darkslategray: '#2e2e2e'

colorswatch_default_gradient_white_orange:
  template:
    type: colorswatch
  colorswatch:
    colorswatch: colorswatch_default_gradient_white_orange
    colors:
      light:
      - --sak-cs-default-01: '#FFF6E3'
      - --sak-cs-default-02: '#FFE9B9'
      - --sak-cs-default-03: '#FFDA8A'
      - --sak-cs-default-04: '#FFCB5B'
      - --sak-cs-default-05: '#FFBF37'
      - --sak-cs-default-06: '#ffb414
      - --sak-cs-default-07: '#FFAD12'
      - --sak-cs-default-08: '#FFA40E'
      - --sak-cs-default-09: '#FF9C0B'
      - --sak-cs-default-10: '#FF8C06'
    

colorswatch_gradient_white_orange:
  template:
    type: colorswatch
  colorswatch:
    colorswatch: colorswatch_gradient_white_orange
    colors:
      - --sak-cs-gradient-white-orange-01: '#FFF6E3'
      - --sak-cs-gradient-white-orange-02: '#FFE9B9'
      - --sak-cs-gradient-white-orange-03: '#FFDA8A'
      - --sak-cs-gradient-white-orange-04: '#FFCB5B'
      - --sak-cs-gradient-white-orange-05: '#FFBF37'
      - --sak-cs-gradient-white-orange-06: '#ffb414
      - --sak-cs-gradient-white-orange-07: '#FFAD12'
      - --sak-cs-gradient-white-orange-08: '#FFA40E'
      - --sak-cs-gradient-white-orange-09: '#FF9C0B'
      - --sak-cs-gradient-white-orange-10: '#FF8C06'

colorswatch_rainbow:
  template:
    type: colorswatch
  colorswatch:
    colorswatch: colorswatch_rainbow
    colors:
      - --sak-cs-rainbow-00: 'white'
      - --sak-cs-rainbow-01: '#5e4fa2'
      - --sak-cs-rainbow-02: '#3288bd'
      - --sak-cs-rainbow-03: '#66c2a5'
      - --sak-cs-rainbow-04: '#abdda4'
      - --sak-cs-rainbow-05: '#e6f598'
      - --sak-cs-rainbow-06: '#fee08b'
      - --sak-cs-rainbow-07: '#fdae61'
      - --sak-cs-rainbow-08: '#f46d43'
      - --sak-cs-rainbow-09: '#d53e4f'
      - --sak-cs-rainbow-10: '#9e0142'
    
colorstops_lux:
  template:
    type: colorstops
    defaults:
      - thegap: 1
  colorstops:
    # colorstops:
    gap: '[[thegap]]'
    colors:
      0: 'grey'
      50: 'var(--theme-gradient-color-01)'
      75: 'var(--theme-gradient-color-02)'
      100: 'var(--theme-gradient-color-03)'
      125: 'var(--theme-gradient-color-04)'
      150: 'var(--theme-gradient-color-05)'
      175: 'var(--theme-gradient-color-06)'

colorstops_pressure:
  template:
    type: colorstops
    defaults:
      - thegap: 1
  colorstops:
    # colorstops:
    gap: '[[thegap]]'
    colors:
      980: 'lightgrey'
      990: 'var(--theme-gradient-color-01)'
      1020: 'var(--theme-gradient-color-05)'

colorstops_temperature_inside:
  template:
    type: colorstops
    defaults:
      - thegap: 1
  colorstops:
    # colorstops:
    gap: '[[thegap]]'
    colors:
      17: 'PowderBlue'
      19: 'var(--theme-gradient-color-01)'
      21: 'var(--theme-gradient-color-04)'

colorstops_humidity:
  template:
    type: colorstops
    defaults:
      - thegap: 1
  colorstops:
    # colorstops:
    gap: '[[thegap]]'
    colors:
      00: 'var(--theme-gradient-color-02)'
      35: 'DarkSeaGreen'
      65: 'PowderBlue'

tools_segarc_icon_state_OLD:
  type: toolset
  defaults: 
    - entity: 0
    - show_scale: false
  toolset:
    position:
      cx: 25
      cy: 50
      scale: 1
    colorswatch:
      - template:
          name: colorswatch_default_gradient_white_orange
    tools:
      - type: circle
        id: 10
        cx: 50
        cy: 50
        radius: 27.5
        styles:
          circle:
            fill: var(--primary-background-color);
            stroke-width: 0;
            # filter: url(#nm-1);          
        
      - type: segarc
        id: 0
        entity_index: '[[entity]]'
        cx: 50
        cy: 50
        start_angle: 0
        end_angle: 360
        width: 5
        radius: 25
        scale:
          min: 0
          max: 100
        show:
          scale: '[[show_scale]]'
          style: 'colorlist'
        segments:
          colorlist:
            gap: 1
            colors:
              - 'var(--theme-gradient-color-01)'
        animation:
          duration: 5
        styles:
          foreground:
            fill: var(--theme-gradient-color-01);
          background:
            # fill: var(--primary-background-color);
            # fill: lightgray;
            # #efeeee
            # fill: var(--secondary-background-color);
            fill: var(--cs-theme-default-darken-15);
              #dedddd;
            filter: url(#is-1);

      - type: icon
        id: 1
        entity_index: '[[entity]]'
        cx: 50
        cy: 42
        align: center
        icon_size: 15
        styles:
          icon:
            filter: url(#is-1);
            fill: lightgray;
            color: lightgray;
            # color: var(--primary-text-color);
            # fill: var(--primary-text-color);
            # opacity: 0.8;
            
            # color: var(--cs-theme-default-icon-primary, --primary-text-color);
            # fill: var(--cs-theme-default-icon-primary, --primary-text-color);


      - type: state
        id: 2
        entity_index: '[[entity]]'
        cx: 50
        cy: 56
        styles:
          state:
            text-anchor: middle;
            font-size: 2em;
            color: var(--primary-text-color);
            fill: var(--primary-text-color);

tools_segarc_icon_state:
  template:
    type: toolset
    defaults: 
      - entity: 0
      - show_scale: false
  toolset:
    from_template: true
    toolset: segarc-icon-state
    position:
      cx: 25
      cy: 50
      scale: 1
    colorswatch:
      - template:
          name: toolset_light_button
      - template:
          name: colorswatch_default_gradient_white_orange
      # - template:
          # name: colorswatch_default_gradient_white_orange
      # - template:
          # name: colorswatch_rainbow
    tools:
      - type: circle
        id: 10
        cx: 50
        cy: 50
        radius: 27.5
        styles:
          circle:
            fill: var(--primary-background-color);
            stroke-width: 0;
            # filter: url(#nm-1);          
        
      - type: segarc
        id: 0
        entity_index: '[[entity]]'
        cx: 50
        cy: 50
        start_angle: 0
        end_angle: 360
        width: 5
        radius: 25
        scale:
          min: 0
          max: 100
        show:
          scale: '[[show_scale]]'
          style: 'colorlist'
        segments:
          colorlist:
            gap: 1
            colors:
              - 'var(--theme-gradient-color-01)'
        animation:
          duration: 5
        styles:
          foreground:
            fill: var(--theme-gradient-color-01);
          background:
            # fill: var(--primary-background-color);
            # fill: lightgray;
            # #efeeee
            # fill: var(--secondary-background-color);
            fill: var(--cs-theme-default-darken-15);
              #dedddd;
            filter: url(#is-1);

      - type: icon
        id: 1
        entity_index: '[[entity]]'
        cx: 50
        cy: 42
        align: center
        icon_size: 15
        styles:
          icon:
            filter: url(#is-1);
            fill: lightgray;
            color: lightgray;
            # color: var(--primary-text-color);
            # fill: var(--primary-text-color);
            # opacity: 0.8;
            
            # color: var(--cs-theme-default-icon-primary, --primary-text-color);
            # fill: var(--cs-theme-default-icon-primary, --primary-text-color);


      - type: state
        id: 2
        entity_index: '[[entity]]'
        cx: 50
        cy: 56
        styles:
          state:
            text-anchor: middle;
            font-size: 2em;
            color: var(--primary-text-color);
            fill: var(--primary-text-color);

toolset_arc180_sparklinebar24:
  template:
    type: toolset
    defaults: 
      - entity: 0
      - show_scale: true
      - cx: 50
      - cy: 50
  toolset:
    toolset: arc180-sparklinebar24
    position:
      cx: '[[cx]]'
      cy: '[[cy]]'
    tools:
      # - type: 'area'
        # id: 0
        # entity_index: '[[entity]]'
        # cx: 50
        # cy: 98
        # styles:
          # font-size: 2em;
          # text-anchor: middle;

      - type: 'name'
        id: 1
        entity_index: '[[entity]]'
        cx: 50
        cy: 65
        styles:
          name:
            font-size: 1.8em;
            text-anchor: middle;

      - type: 'segarc'
        id: 2
        entity_index: '[[entity]]'
        cx: 50
        cy: 50
        start_angle: -90
        end_angle: 90
        width: 10
        radius: 45
        radius_x: 45
        radius_y: 45
        # scale_offset: -20
        #
        # Scale settings are not merged using templates. Why??
        # keep getting the default values set by the segarc...
        # a separate segarc works with these settings in scale.width etc.
        scale:
          # min: 50
          min: '[[scale_min]]'
          max: '[[scale_max]]'
          width: 5
          offset: -10
        show:
          scale: '[[show_scale]]'
          style: 'colorstops'
        segments:
          colorstops:
            template:
              name: '[[colorstops_template]]'
              variables:
                - thegap: 0
        styles:
          foreground:
            fill: var(--theme-gradient-color-01);
          background:
            # fill: var(--secondary-background-color);
            fill: var(--cs-theme-default-darken-15);
            filter: url(#is-1);

      - type: 'state'
        id: 3
        entity_index: '[[entity]]'
        cx: 50
        cy: 40
        styles:
          state:
            text-anchor: middle;
            font-size: 3.6em;
            fill: var(--primary-text-color);

      - type: 'icon'
        id: 4
        entity_index: '[[entity]]'
        cx: 10
        cy: 10
        align: center
        icon_size: 15
        styles:
          icon:
            color: var(--primary-text-color);
            fill: var(--primary-text-color);

      - type: 'bar'
        id: 5
        orientation: vertical
        entity_index: '[[entity]]'
        cx: 50
        cy: 85
        width: 90
        height: 25
        hours: 24
        barhours: 1
        styles:
          bar:
            stroke: grey;
            stroke-linecap: butt;

#######################

toolset_light_button:
  template:
    type: toolset
    defaults: 
      - entity_light: 0
      - entity_brightness: 1
  toolset:
    toolset: light-button
    position:
      cx: 50
      cy: 50
    tools:
      # Static circle
      - type: circle
        id: 1
        cx: 50
        cy: 30
        radius: 25
        entity_index: '[[entity_light]]'
        # If on, hide this circle
        animations:
          - state: 'on'
            styles:
              circle:
                opacity: 0;
        styles:
          circle:
            fill-opacity: 0.1;
            fill: black;
            stroke-width: 5;
            stroke: var(--theme-gradient-color-01);
            stroke-opacity: 0.9;

      #Animated circle
      - type: circle
        id: 2
        cx: 50
        cy: 30
        radius: 25
        entity_index: '[[entity_light]]'
        animations:
          - state: 'on'
            styles:
              circle:
                opacity: 1;
                stroke-opacity: 1;
                stroke-width: 5;
                stroke: var(--theme-gradient-color-01);
                fill: var(--theme-gradient-color-06);
                fill-opacity: 0.9;
                # transform-origin: top;
                animation: jello 1s ease-in-out both;
                # animation: pulse 1s ease-in-out both;
                # animation: tada 1s ease-in-out both;
                # animation: rubberBand 1s ease-in-out both;
          - state: 'off'
            reuse: true
            styles:
              circle:
                opacity: 1;
                animation: zoomOut 1s ease-out both;
                transform-origin: inherit;
                # stroke-width: 5;
                # stroke: var(--theme-gradient-color-01);
                # stroke-opacity: 1;
                # fill-opacity: 0.9;
                # fill: black;
        styles:
          circle:
            opacity: 0;
            # fill-opacity: 0.1;
            # fill: black;
            # fill: none;
            # stroke-width: 5;
            # stroke: var(--theme-gradient-color-01);
            # stroke-opacity: 0.9;
        
      - type: icon
        cx: 50
        cy: 30
        id: 3
        entity_index: '[[entity_light]]'
        align: center
        icon_size: 36
        animations:
          - state: 'on'
            styles:
              icon:
                fill: var(--theme-gradient-color-01);
                color: var(--theme-gradient-color-01);
                fill-opacity: 0.9;
          - state: 'off'
            styles:
              icon:
                fill: var(--theme-gradient-color-01);
                color: var(--theme-gradient-color-01);
                fill-opacity: 0.7;
        styles:
          icon:
            pointer-events: none;

      - type: name
        cx: 5
        cy: 75
        id: 4
        entity_index: '[[entity_light]]'
        styles:
          name:
            font-size: 1.8em;
            font-weight: 700;
            text-anchor: start;
      - type: area
        entity_index: 0
        id: 5
        cx: 5
        cy: 85
        styles:
          area:
            font-size: 1.2em;
            text-anchor: start;
      - type: state
        cx: 5
        cy: 95
        id: 6
        entity_index: '[[entity_light]]'
        animations:
          - state: 'on'
            styles:
              state:
                fill: var(--theme-gradient-color-08);
                opacity: 0.9;
          - state: 'off'
            reuse: true
            styles:
              state:
                fill: var(--theme-gradient-color-01);
                opacity: 0.7;
        styles:
          state:
            font-size: 1.8em;
            text-anchor: start;
      - type: state
        cx: 95
        cy: 95
        id: 7
        # custom_fields:
          # - brightness: >
              # [[[
                # if (typeof(entity) === 'undefined') return;
                
                # if ('brightness' in entity.attributes)
                # {
                  # if (entity.attributes
                  # && (entity.attributes.brightness <= 255)) {
                    # var bri = Math.round(entity.attributes.brightness / 2.55);
                    # return (bri ? bri : '0') + '%';
                  # }
                # }
              # ]]]
        custom_value: >
          [[[
            if (typeof(entity) === 'undefined') return;
            
            if ('brightness' in entity.attributes)
            {
              if (entity.attributes
              && (entity.attributes.brightness <= 255)) {
                var bri = Math.round(entity.attributes.brightness / 2.55);
                return (bri ? bri : '0') + '%';
              }
            }
          ]]]
        entity_index: '[[entity_brightness]]'
        # Animation can run on the entities 'state', or on the custom_value.
        # so - state: 'on', or for example - custom_value: '10%' in this case for light.
        # Something must be done still, to make sure that presentation is with uom formatted, so must know uom.
        animations:
          - state: 'on'
            entity_index: '[[entity_light]]'
            styles:
              state:
                fill: var(--theme-gradient-color-08);
                opacity: 0.9;
          - state: 'off'
            entity_index: '[[entity_light]]'
            reuse: true
            styles:
              state:
                fill: var(--theme-gradient-color-01);
                opacity: 0.7;
        styles:
          state:
            font-size: 1.8em;
            text-anchor: end;

###############################################

toolset_light_button_nm:
  template:
    type: toolset
    defaults: 
      - entity_light: 0
      - entity_brightness: 1
  toolset:
    toolset: light-button-nm
    position:
      cx: 50
      cy: 50
      scale: 1
      rotate: 0
    tools:
      # Surface 
      - type: circle
        cx: 50
        # cy: 35
        cy: 40
        # radius: 28
        radius: 31
        styles:
          circle:
            pointer-events: none;
            stroke-width: 5;
            fill: var(--primary-background-color);

      # Activation ring
      - type: circle
        cx: 50
        # cy: 35
        cy: 40
        # radius: 25
        radius: 28
        animations:
          - state: 'on'
            styles:
              circle:
                # fill: darkorange;
                fill: var(--cs-orange-lighten-20);
          - state: 'off'
            styles:
              circle:
                # fill: var(--secondary-background-color);
                # fill: var(--cs-theme-default-darken-15);
                # color: var(--primary-text-color);
                fill: var(--primary-text-color);
                opacity: 0.7;
        styles:
          circle:
            stroke-width: 0;
            pointer-events: none;

      # Actual "button"
      - type: circle
        cx: 50
        # cy: 35
        cy: 40
        # radius: 24
        radius: 27
        entity_index: '[[entity_light]]'
        # Note, 2020.11.07
        # Safari (again) can't handle modifications in the filter url:
        # - from none to some filter is ok
        # - from some filter to none is ok
        # - but from some filter to another filter doesn't change the filter!!!!
        # Refreshing page works, but that is not the point...
        # ?!?!?!?!?!?
        # At some moment it just started working, and then again not. WEIRD!!
        animations:
          - state: 'on'
            styles:
              circle:
                filter: url(#filter);
          - state: 'off'
            styles:
              circle:
                # stroke: lightgray;
                filter: none;
        styles:
          circle:
            stroke-width: 0;
            fill: var(--primary-background-color);

      # Light/Switch icon
      - type: icon
        cx: 50
        # cy: 35
        cy: 40
        entity_index: '[[entity_light]]'
        align: center
        # icon_size: 36
        icon_size: 39
        animations:
          - state: 'on'
            styles:
              icon:
                # color: darkorange;
                # fill: darkorange;
                color: var(--cs-orange-lighten-20);
                fill: var(--cs-orange-lighten-20);

                # color: var(--accent-color);
                # fill: var(--accent-color);
                opacity: 1;

          - state: 'off'
            styles:
              icon:
                # color: var(--secondary-background-color);
                # fill: var(--secondary-background-color);
                # color: var(--cs-theme-default-darken-15);
                # fill: var(--cs-theme-default-darken-15);
                # opacity: 0.7;
                color: var(--primary-text-color);
                fill: var(--primary-text-color);
                opacity: 0.7;
        styles:
          icon:
            pointer-events: none;
            filter: url(#is-1);

      # Name of entity
      - type: name
        cx: 5
        cy: 81
        id: 4
        entity_index: '[[entity_light]]'
        styles:
          name:
            font-size: 1.8em;
            font-weight: 700;
            text-anchor: start;

      # Area of entity
      - type: area
        entity_index: 0
        id: 5
        cx: 5
        cy: 95
        styles:
          area:
            font-size: 2.4em;
            text-anchor: start;

      # # State of entity
      # - type: state
        # cx: 5
        # cy: 95
        # id: 6
        # entity_index: '[[entity_light]]'
        # animations:
          # - state: 'on'
            # styles:
              # fill: var(--theme-gradient-color-08);
              # opacity: 0.9;
          # - state: 'off'
            # reuse: true
            # styles:
              # fill: var(--theme-gradient-color-01);
              # opacity: 0.7;
        # styles:
          # font-size: 1.8em;
          # text-anchor: start;

      # Brightness of entity
      - type: state
        cx: 95
        cy: 91
        id: 7
        # custom_fields:
          # - brightness: >
              # [[[
                # if (typeof(entity) === 'undefined') return;
                
                # if ('brightness' in entity.attributes)
                # {
                  # if (entity.attributes
                  # && (entity.attributes.brightness <= 255)) {
                    # var bri = Math.round(entity.attributes.brightness / 2.55);
                    # return (bri ? bri : '0') + '%';
                  # }
                # }
              # ]]]
        custom_value: >
          [[[
            if (typeof(entity) === 'undefined') return;
            
            if ('brightness' in entity.attributes)
            {
              if (entity.attributes
              && (entity.attributes.brightness <= 255)) {
                var bri = Math.round(entity.attributes.brightness / 2.55);
                return (bri ? bri : '0') + '%';
              }
            }
          ]]]
        entity_index: '[[entity_brightness]]'
        # Animation can run on the entities 'state', or on the custom_value.
        # so - state: 'on', or for example - custom_value: '10%' in this case for light.
        # Something must be done still, to make sure that presentation is with uom formatted, so must know uom.
        animations:
          - state: 'on'
            entity_index: '[[entity_light]]'
            styles:
              state:
                fill: var(--theme-gradient-color-08);
                opacity: 0.9;
          - state: 'off'
            entity_index: '[[entity_light]]'
            reuse: true
            styles:
              state:
                fill: var(--theme-gradient-color-01);
                opacity: 0.7;
        styles:
          state:
            font-size: 1.8em;
            text-anchor: end;

##########################
toolset_sensor_history:
  template:
    type: toolset
    defaults: 
      - entity: 0
      - icon_color: var(--cs-orange-lighten-30);
      - bar_color_min: var(--cs-orange-lighten-10)
      - bar_color_max: var(--cs-orange-darken-30)
  toolset:
    toolset: sensor-history
    position:
      cx: 50
      cy: 50
      scale: 1
    tools:
      - type: rectex
        cx: 50
        cy: 50
        width: 90
        height: 90
        radius:
          top_left: 0
          top_right: 50
          bottom_right: 0
          bottom_left: 10
        styles:
          rectex:
            stroke: var(--primary-background-color);
            fill: var(--primary-background-color);

      # state
      - type: state
        cx: 10
        cy: 20
        entity_index: '[[entity]]'
        styles:
          state:
            text-anchor: start;
            font-size: 3.5em;
            font-weight: 700;

      # circle for icon
      - type: circle
        cx: 85
        cy: 15
        radius: 10
        styles:
          circle:
            fill: var(--primary-background-color);
      # icon
      - type: icon
        cx: 85
        cy: 15
        entity_index: '[[entity]]'
        align: center
        icon_size: 20
        styles:
          icon:
            fill: '[[icon_color]]'
            color: '[[icon_color]]'
            filter: url(#is-1);

      # name
      - type: name
        cx: 50
        cy: 45
        entity_index: '[[entity]]'
        styles:
          name:
            text-anchor: middle;
            font-size: 2.2em;
            font-weight: 400;

      # bar
      - type: bar
        id: 2
        orientation: vertical
        entity_index: '[[entity]]'
        cx: 50
        cy: 77.5
        width: 85
        height: 30
        margin: 1
        hours: 24
        barhours: 1
        show:
          style: 'minmaxgradient'
        minmaxgradient:
          min: '[[bar_color_min]]'
          max: '[[bar_color_max]]'
        styles:
          bar:
            # stroke: '[[bar_color]]'
            # stroke-opacity: 0.5;
            stroke-linecap: round;
