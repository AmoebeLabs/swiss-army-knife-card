#
# File      : sak_templates.yaml
# Project   : Home Assistant
# Repository: https://github.com/AmoebeLabs/Home-Assistant-Config
#
# Author: Mars @ AmoebeLabs.com
# 
# License: CC BY-SA, https://creativecommons.org/licenses/by/4.0/
#
# -----
# Description:
#   Swiss Army Knife template yaml file
#   
###############################################################################

colorstops_lux:
  type: colorstops
  defaults:
    - thegap: 1
  colorstops:
    gap: '[[thegap]]'
    colors:
      0: 'grey'
      50: 'var(--theme-gradient-color-01)'
      75: 'var(--theme-gradient-color-02)'
      100: 'var(--theme-gradient-color-03)'
      125: 'var(--theme-gradient-color-04)'
      150: 'var(--theme-gradient-color-05)'
      175: 'var(--theme-gradient-color-06)'

colorstops_pressure:
  type: colorstops
  defaults:
    - thegap: 1
  colorstops:
    gap: '[[thegap]]'
    colors:
      980: 'lightgrey'
      990: 'var(--theme-gradient-color-01)'
      1020: 'var(--theme-gradient-color-05)'

colorstops_temperature_inside:
  type: colorstops
  defaults:
    - thegap: 1
  colorstops:
    gap: '[[thegap]]'
    colors:
      17: 'PowderBlue'
      19: 'var(--theme-gradient-color-01)'
      21: 'var(--theme-gradient-color-04)'

colorstops_humidity:
  type: colorstops
  defaults:
    - thegap: 1
  colorstops:
    gap: '[[thegap]]'
    colors:
      00: 'var(--theme-gradient-color-02)'
      35: 'DarkSeaGreen'
      65: 'PowderBlue'

tools_segarc_icon_state:
  type: toolset
  defaults: 
    - entity: 0
    - show_scale: false
  toolset:
    position:
      cx: 25
      cy: 50
      scale: 1
    tools:
      - type: segarc
        id: 0
        entity_index: '[[entity]]'
        cx: 50
        cy: 50
        start_angle: 0
        end_angle: 360
        width: 5
        radius: 25
        scale:
          min: 0
          max: 100
        show:
          scale: '[[show_scale]]'
          style: 'colorlist'
        segments:
          colorlist:
            gap: 1
            colors:
              - 'var(--theme-gradient-color-01)'
        animation:
          duration: 5
        styles:
          fill: var(--theme-gradient-color-01);
        styles_bg:
          fill: var(--primary-background-color);

      - type: icon
        id: 1
        entity_index: '[[entity]]'
        cx: 50
        cy: 42
        align: center
        icon_size: 15

      - type: state
        id: 2
        entity_index: '[[entity]]'
        cx: 50
        cy: 60
        styles:
          text-anchor: center;
          font-size: 1.7em;
          color: var(--theme-gradient-color-01);
          fill: var(--theme-gradient-color-01);

toolset_arc180_sparklinebar24:
  type: toolset
  defaults: 
    - entity: 0
    - show_scale: true
  toolset:
    position:
      cx: 50
      cy: 50
    tools:
      # - type: 'area'
        # id: 0
        # entity_index: '[[entity]]'
        # cx: 50
        # cy: 98
        # styles:
          # font-size: 2em;
          # text-anchor: middle;

      - type: 'name'
        id: 1
        entity_index: '[[entity]]'
        cx: 50
        cy: 65
        styles:
          font-size: 1.5em;
          text-anchor: middle;

      - type: 'segarc'
        id: 2
        entity_index: '[[entity]]'
        cx: 50
        cy: 50
        start_angle: -90
        end_angle: 90
        width: 5
        radius: 45
        scale:
          min: '[[scale_min]]'
          max: '[[scale_max]]'
        show:
          scale: '[[show_scale]]'
          style: 'colorstops'
        segments:
          colorstops:
            template:
              name: '[[colorstops_template]]'
              variables:
                - thegap: 0
        styles:
          fill: var(--theme-gradient-color-01);
        styles_bg:
          fill: var(--primary-background-color);

      - type: 'state'
        id: 3
        entity_index: '[[entity]]'
        cx: 50
        cy: 40
        styles:
          text-anchor: center;
          font-size: 3em;
          fill: var(--theme-gradient-color-01);

      - type: 'icon'
        id: 4
        entity_index: '[[entity]]'
        cx: 10
        cy: 10
        align: center
        icon_size: 15
        styles:
          color: var(--theme-gradient-color-01);
          fill: var(--theme-gradient-color-01);

      - type: 'bar'
        id: 5
        orientation: vertical
        entity_index: '[[entity]]'
        cx: 50
        cy: 85
        width: 90
        height: 25
        hours: 24
        barhours: 1
        styles:
          stroke: var(--theme-gradient-color-01);
          stroke-linecap: butt;

#######################

toolset_light_button:
  type: toolset
  defaults: 
    - entity_light: 0
    - entity_brightness: 1
  toolset:
    position:
      cx: 50
      cy: 50
    tools:
      # Static circle
      - type: circle
        cx: 50
        cy: 30
        radius: 25
        entity_index: '[[entity_light]]'
        # If on, hide this circle
        animations:
          - state: 'on'
            styles:
              opacity: 0;
          - state: 'off'
            styles:
        styles:
          fill-opacity: 0.1;
          fill: black;
          stroke-width: 5;
          stroke: var(--theme-gradient-color-01);
          stroke-opacity: 0.9;

      #Animated circle
      - type: circle
        cx: 50
        cy: 30
        radius: 25
        entity_index: '[[entity_light]]'
        animations:
          - state: 'on'
            styles:
              opacity: 1;
              stroke-opacity: 1;
              stroke-width: 5;
              stroke: var(--theme-gradient-color-01);
              fill: var(--theme-gradient-color-06);
              fill-opacity: 0.9;
              # transform-origin: top;
              animation: jello 1s ease-in-out both;
              # animation: pulse 1s ease-in-out both;
              # animation: tada 1s ease-in-out both;
              # animation: rubberBand 1s ease-in-out both;
          - state: 'off'
            reuse: true
            styles:
              opacity: 1;
              animation: zoomOut 1s ease-out both;
              transform-origin: inherit;
              # stroke-width: 5;
              # stroke: var(--theme-gradient-color-01);
              # stroke-opacity: 1;
              # fill-opacity: 0.9;
              # fill: black;
        styles:
          opacity: 0;
          # fill-opacity: 0.1;
          # fill: black;
          # fill: none;
          # stroke-width: 5;
          # stroke: var(--theme-gradient-color-01);
          # stroke-opacity: 0.9;
        
      - type: icon
        cx: 50
        cy: 30
        entity_index: '[[entity_light]]'
        align: center
        icon_size: 36
        animations:
          - state: 'on'
            styles:
              fill: var(--theme-gradient-color-01);
              color: var(--theme-gradient-color-01);
              fill-opacity: 0.9;
          - state: 'off'
            styles:
              fill: var(--theme-gradient-color-01);
              color: var(--theme-gradient-color-01);
              fill-opacity: 0.7;
        styles:
          pointer-events: none;

      - type: name
        cx: 5
        cy: 75
        entity_index: '[[entity_light]]'
        styles:
          font-size: 1.5em;
          font-weight: 700;
          text-anchor: start;
      - type: area
        entity_index: 0
        cx: 5
        cy: 85
        styles:
          font-size: 1em;
          text-anchor: start;
      - type: state
        cx: 5
        cy: 95
        entity_index: '[[entity_light]]'
        animations:
          - state: 'on'
            styles:
              fill: var(--theme-gradient-color-08);
              opacity: 0.9;
          - state: 'off'
            reuse: true
            styles:
              fill: var(--theme-gradient-color-01);
              opacity: 0.7;
        styles:
          font-size: 1.5em;
          text-anchor: start;
      - type: state
        cx: 95
        cy: 95
        custom_fields:
          - brightness: >
              [[[
                if (typeof(entity) === 'undefined') return;
                
                if ('brightness' in entity.attributes)
                {
                  if (entity.attributes
                  && (entity.attributes.brightness <= 255)) {
                    var bri = Math.round(entity.attributes.brightness / 2.55);
                    return (bri ? bri : '0') + '%';
                  }
                }
              ]]]
        custom_value: >
          [[[
            if (typeof(entity) === 'undefined') return;
            
            if ('brightness' in entity.attributes)
            {
              if (entity.attributes
              && (entity.attributes.brightness <= 255)) {
                var bri = Math.round(entity.attributes.brightness / 2.55);
                return (bri ? bri : '0') + '%';
              }
            }
          ]]]
        entity_index: '[[entity_brightness]]'
        # Animation can run on the entities 'state', or on the custom_value.
        # so - state: 'on', or for example - custom_value: '10%' in this case for light.
        # Something must be done still, to make sure that presentation is with uom formatted, so must know uom.
        animations:
          - state: 'on'
            entity_index: '[[entity_light]]'
            styles:
              fill: var(--theme-gradient-color-08);
              opacity: 0.9;
          - state: 'off'
            entity_index: '[[entity_light]]'
            reuse: true
            styles:
              fill: var(--theme-gradient-color-01);
              opacity: 0.7;
        styles:
          font-size: 1.5em;
          text-anchor: end;
