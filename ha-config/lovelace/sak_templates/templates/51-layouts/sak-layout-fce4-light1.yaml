sak_layout_fce4_light1:
  template:
    type: layout
    defaults: 
      - sak_layout_light_toggle_service: light.toggle
      - sak_layout_light_use_light_color: true
      - sak_layout_binary_icon_color: var(--theme-sys-color-primary)
      - sak_layout_binary_icon_color_on: var(--theme-ref-palette-error50) #var(--theme-sys-color-error-container)
      - sak_layout_binary_icon_animation: flash # none, flash, spin
      - sak_layout_binary_history_color_on: var(--theme-sys-color-primary)
      - sak_layout_binary_history_disabled: false

  layout:
    aspectratio: 1/1
    toolsets:
      # ==============================================================================
      - toolset: homekit-state
        position:
          cx: 50
          cy: 50
        tools:
            # When disabled, SAK will not use this tool
          # ------------------------------------------------------------
          # - type: icon
          #   disabled: '[[ return sak_layout_light_use_light_color]]'
          #   position:
          #     cx: 12.5
          #     cy: 15
          #     align: center
          #     icon_size: 15
          #   entity_index: 1
          #   # Define template variable for this icon tool, so it can be
          #   # processed by a piece of JavaScript ;-)
          #   # The template engine will replace the variable!
          #   variables:
          #     sak_layout_binary_icon_animation : '[[sak_layout_binary_icon_animation]]'
          #   animations:
          #     - state: 'on'
          #       styles:
          #         icon:
          #           # Use template variable as the source to spin, flash or nothing
          #           # the config JavaScript parameter is this tools config...
          #           animation: >
          #             [[[ if (tool_config.variables.sak_layout_binary_icon_animation === "spin") return "spin 3s linear infinite";
          #                 if (tool_config.variables.sak_layout_binary_icon_animation === "flash") return "flash 2s ease-in-out 5";
          #                 return "";
          #             ]]]
          #           fill: '[[sak_layout_binary_icon_color_on]]'
          #     - state: 'off'
          #       styles:
          #         icon:
          #           fill: '[[sak_layout_binary_icon_color]]'
          #   styles:
          #     icon:
          #       fill: '[[sak_layout_binary_icon_color]]'
          # ------------------------------------------------------------
          # - type: icon
          #   disabled: '[[[[ return !tool_config.variables.sak_layout_light_use_light_color; ]]]]'
          #   position:
          #     cx: 12.5
          #     cy: 15
          #     align: center
          #     icon_size: 15
          #   entity_index: 0
          #   variables:
          #     sak_layout_binary_icon_animation : '[[sak_layout_binary_icon_animation]]'
          #     sak_layout_light_use_light_color : '[[sak_layout_light_use_light_color]]'
          #   animations:
          #     - state: '[[[ return state; ]]]'
          #       styles:
          #         icon:
          #           fill: >-
          #             [[[ if (typeof (state) === 'undefined') return 'var(--theme-sys-elevation-surface-neutral10)';
          #                 return `rgb(${state})`; ]]]
          #           # Use template variable as the source to spin, flash or nothing
          #           # the config JavaScript parameter is this tools config...
          #           animation: >
          #             [[[ if (typeof (state) === 'undefined') return 'none';
          #                 if (tool_config.variables.sak_layout_binary_icon_animation === "spin") return "spin 3s linear infinite";
          #                 if (tool_config.variables.sak_layout_binary_icon_animation === "flash") return "flash 1s ease-in-out 1";
          #                 return "";
          #             ]]]
          #   styles:
          #     icon:
          #       fill: var(--theme-sys-elevation-surface-neutral10)
          # ------------------------------------------------------------
          # special test with dual entity indexes
          - type: icon
            disabled: '[[[[ return !tool_config.variables.sak_layout_light_use_light_color; ]]]]'
            position:
              cx: 12.5
              cy: 15
              align: center
              icon_size: 15
            # entity_index: 0
            entity_indexes:
              - entity_index: 0
              - entity_index: 1
            variables:
              sak_layout_binary_icon_animation : '[[sak_layout_binary_icon_animation]]'
              sak_layout_light_use_light_color : '[[sak_layout_light_use_light_color]]'
            animations:
              - state: >-
                  [[[ if (tool_config.variables.sak_layout_light_use_light_color) return 'never';
                      return 'on';
                  ]]]
                debug: false
                entity_index: 1
                reuse: false
                styles:
                  icon:
                    fill: red 
              - state: 'off'
                debug: false
                entity_index: 1
                reuse: false
                styles:
                  icon:
                    fill: var(--theme-sys-elevation-surface-neutral10)
              - state: '[[[ return state; ]]]'
                debug: false
                entity_index: 0
                reuse: false
                styles:
                  icon:
                    fill: '[[[ if (typeof (state) !== "undefined") return state; ]]]'
            styles:
              icon:
                fill: blue

          # ------------------------------------------------------------
          - type: name
            position:
              cx: 22.5
              cy: 15
            entity_index: 1
            show:
              ellipsis: 12
            styles: 
              name: 
                text-anchor: start
                font-size: 10em
                opacity: 0.8

          # ------------------------------------------------------------
          - type: line
            position:
              cx: 50
              cy: 30
              width: 5
              length: 80
              orientation: horizontal
            entity_index: 1
            animations:
              - state: 'on'
                styles:
                  line:
                    stroke: '[[sak_layout_binary_icon_color_on]]'
                    stroke-width: 4em
              - state: 'off'
                styles:
                  line:
                    stroke: var(--theme-sys-elevation-surface-neutral10)
            styles: 
              line: 
                stroke: var(--theme-sys-elevation-surface-neutral10)
                stroke-width: 2em
          # ------------------------------------------------------------
          - type: line
            position:
              cx: 50
              cy: 30
              width: 5
              length: 80
              orientation: horizontal
            entity_index: 0
            variables:
              sak_layout_binary_icon_animation : '[[sak_layout_binary_icon_animation]]'
              sak_layout_light_use_light_color : '[[sak_layout_light_use_light_color]]'
            animations:
              - state: '[[[ return state; ]]]'
                styles:
                  line:
                    stroke: >-
                      [[[ if (typeof (state) === 'undefined') return 'var(--theme-sys-elevation-surface-neutral10)';
                          return state;
                      ]]]
                    stroke-width: >-
                      [[[ if (typeof (state) === 'undefined') return '2em';
                          return '4em'; ]]]

                    # Use template variable as the source to spin, flash or nothing
                    # the config JavaScript parameter is this tools config...
                    animation: >
                      [[[ if (typeof (state) === 'undefined') return 'none';
                          if (tool_config.variables.sak_layout_binary_icon_animation === "spin") return "spin 3s linear infinite";
                          if (tool_config.variables.sak_layout_binary_icon_animation === "flash") return "flash 1s ease-in-out 1";
                          return "";
                      ]]]
            styles: 
              line: 
                stroke: var(--theme-sys-elevation-surface-neutral10)
                stroke-width: 2em
          # ------------------------------------------------------------
          - type: sparkline
            # When disabled, SAK will not use this tool
            disabled: '[[sak_layout_binary_history_disabled]]'
            entity_index: 1
            position:
              cx: 50
              cy: 90
              width: 100
              height: 20
              margin: 0
            period:
              calendar:
                period: day
                offset: 0
                duration:
                  hour: 24
                bins:
                  per_hour: 2
            show:
              chart_type: barcode
              chart_variant: audio_bottom
            state_map:
              template:
                name: sak_statemap_binary
            # State value settings
            # - set agg to max to see the binary changes
            # - set lower_bound to -1 to offset 'off' state
            #   the barcode will start wider now, instead of at minimum width
            # - set upper_bound to 1 ('on') to fix upper scale
            state_values:
              aggregate_func: max
              lower_bound: -1
              upper_bound: 1
            barcode:
              column_spacing: 0
              line_width: 1
            colorstops_transition: hard
            colorstops:
              colors:
                - value: 0
                  color: var(--theme-sys-elevation-surface-neutral10)
                - value: 1
                  color: '[[sak_layout_binary_history_color_on]]'
            styles: 
              tool: 
                opacity: 0.5
          # ------------------------------------------------------------
          - type: state
            position:
              cx: 50
              cy: 60
            entity_index: 1
            show: 
              uom: bottom
              ellipsis: 10
            user_actions:
              tap_action:
                haptic: light
                actions:
                  - action: call-service
                    service: light.toggle
            styles:
              state:
                font-size: 15em
                text-anchor: middle
                alignment-baseline: middle
                font-weight: 700
              uom:
                fill: var(--theme-sys-color-primary)
                alignment-baseline: hanging
                font-weight: 600
